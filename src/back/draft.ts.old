// В PongBackScene
import { AIOpponent } from "./aiOpponent";

export class PongBackScene {
  private aiOpponent: AIOpponent | null = null;

  constructor(engine: PongBackEngine) {
    // ...
    if (this.type === "AI") {
      this.aiOpponent = new AIOpponent(this, "right");
      this.players.push(this.aiOpponent.getUser());
    }
  }

  render() {
    if (this.aiOpponent) {
      const input = this.aiOpponent.update(
        {
          type: "MeshPositions",
          ball: this.pongMeshes.ball.position,
          paddleLeft: this.pongMeshes.paddleLeft.position,
          paddleRight: this.pongMeshes.paddleRight.position,
        },
        Date.now()
      );
      if (input) {
        this.processPlayerInput(input);
      }
    }
    // Обычный рендеринг
  }

  private processPlayerInput(input: PlayerInput) {
    // Логика обработки ввода (w, s, ArrowUp, ArrowDown)
  }
}

