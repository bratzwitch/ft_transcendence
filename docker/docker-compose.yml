services:
  vault:
    build:
      context: vault/
      dockerfile: Dockerfile
    container_name: vault
    # environment:
    #   - VAULT_LOG_LEVEL=debug
    #   - VAULT_ADDR=http://vault:8200
    #   - VAULT_TOKEN=hvs.gjND6NGC8I1zoYCUy9RDyzVT
    #   - GOOGLE_APPLICATION_CREDENTIALS=/vault/config/vault-gcp-creds.json
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hvs.gjND6NGC8I1zoYCUy9RDyzVT
      - VAULT_LOG_LEVEL=debug
      - GOOGLE_APPLICATION_CREDENTIALS=/vault/config/vault-gcp-creds.json
      - VAULT_LOCAL_CONFIG={\"api_addr\":\"http://vault:8200\",\"listener\":[{\"tcp\":{\"address\":\"0.0.0.0:8200\",\"tls_disable\":true}}],\"seal\":{\"gcpckms\":{\"credentials\":\"/vault/config/vault-gcp-creds.json\",\"project\":\"pong-463310\",\"region\":\"global\",\"key_ring\":\"vault-keyring\",\"crypto_key\":\"vault-key\"}},\"storage\":{\"file\":{\"path\":\"/vault/file\"}},\"default_lease_ttl\":\"168h\",\"max_lease_ttl\":\"720h\",\"ui\":true}

    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vdata:/vault/file
    command: server
    # command: server -config=/vault/config/local.json
    # command: sleep infinitely
    networks:
      - front-tier
      - back-tier

  node_sqlite:
    build:
      context: node_sqlite/
      dockerfile: Dockerfile
    container_name: node_sqlite
    depends_on:
      - vault
    environment:
      - NODE_ENV=developmen
      # - NODE_ENV=production
      - DATABASE_PATH=/var/sqlite_data/fp.db
      # УДАЛИТЬ ТОКЕН ПРИ ЗАПУСКЕ В GIT !!!!!
      - VAULT_TOKEN=hvs.gjND6NGC8I1zoYCUy9RDyzVT
    volumes:
      # - fp_data:/var/fp_data/
      - sqlite_data:/var/sqlite_data/
    # restart: always
    # expose:
    #   - "8081"
    #   - "22"
    #   - "12800"
    # ports:
    #   - "2201:22"
    #   - "8001:8001"
    #   - "12800:12800"
    # user: "node"
    # working_dir: /var/fp_data/
    working_dir: /home/node/Pong
    command: "/home/node/run.sh"
    networks:
      - front-tier
      - back-tier

  nginx_modsecurity:
    build:
      context: nginx_modsecurity/
      dockerfile: Dockerfile
    container_name: nginx_modsecurity
    ports:
      - "8443:8443"
      # - "8080:8080"
    depends_on:
      - node_sqlite
    networks:
      - front-tier
      - back-tier
    # volumes:
    #   - ms_log:/var/log/modsec
    environment:
      BACKEND: https://node_sqlite:12800
      # PORT: 8080
      SSL_PORT: 8443
      SERVER_NAME: localhost
      SERVER_TOKENS: off
      NGINX_ALWAYS_TLS_REDIRECT: on
      SSL_CERT: /etc/nginx/ssl/front.crt
      SSL_CERT_KEY: /etc/nginx/ssl/front.key
      SSL_PROTOCOLS: "TLSv1.2 TLSv1.3"
      SSL_CIPHERS: "HIGH:!aNULL:!MD5"
      SSL_PREFER_CIPHERS: on
      SSL_VERIFY: off
      SSL_VERIFY_DEPTH: 1
      # PROXY_PASS: https://node_sqlite:12800
      PROXY_SSL_PROTOCOLS: "TLSv1.2 TLSv1.3"
      PROXY_SSL_CIPHERS: "HIGH:!aNULL:!MD5"
      PROXY_SSL_VERIFY: off
      MODSEC_AUDIT_ENGINE: on
      MODSEC_AUDIT_LOG: /var/log/modsec/audit.log
      LOGLEVEL: warn
      ERRORLOG: /var/log/modsec/error.log
      MODSECURITY_CONFIG: /opt/conf/modsecurity.conf
      CRS_SETUP_CONF: /opt/conf/crs-setup.conf

  # redis:
  #   image: redis:7-alpine
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   networks:
  #     - front-tier

volumes:
  vdata:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/GitHub/Pong/docker/vault/data
  sqlite_data:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/GitHub/Pong/data/sqlite
  # ms_log:
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: /home/${USER}/GitHub/Pong/docker/node_sqlite/log

networks:
  front-tier: {}
  # back-tier: {}
  back-tier: {internal: true}
